[gui]
maximagewidth = 512
maximageheight = 512
defaultimage = sample2.png

[test]
operation = erode
structuringelement = ellipse
radiusmin = 1
radiusmax = 10
nitersopencv = 1
nitersopencl = 1

[opencl]
atomiccounters = false

# Rozmiar grupy roboczej (lokalnej)
workgroupsizex = 16
workgroupsizey = 16

# 0 - uchar
# 1 - uint
# (tylko dla metody z wykorzystaniem buforow)
datatype = 0

[kernel-buffer2D]
erode = erode_c4
dilate = dilate_c4
gradient = gradient_c4

################################################################################
# implementacja z uzyciem buforow 2D (objektow obrazu) udostepnia ponizsze wersje kerneli:
# * erode, - najprostrza metoda
#	erode_c4, - pobiera wspolrzedne el. strukturalnego jako int4 zamiast int2 (lepsze upakowanie operacji ALU) po czym w jednym kroku petli wykonuje dwie operacje min lub max
#	erode_c4_pragma - to co wyzej + wielkosc wektora wspolrzednych el. strukturalnego jest podawana w czasie kompilacji jako -DCOORDS_SIZE=N.
#					  Dzieki temu mozna zastosowac pragme unroll
#
# * dilate, - to co w przypadku erozji
#	dilate_c4, 
#   dilate_c4_pragma
#
# * gradient, - to co w przypadku erozji
#	gradient_c4, 
#   gradient_c4_pragma
#
# Bez wyboru (bo tylko jedna opcja)
# * outline (hit-miss wyciagajacy kontury obiektow)
# * subtract: operacja typu dst=saturate(a-b)
# * skeleton_iter[n], n=1, .., 8 (dla kazdego z 8 elementow strukturalnych)
# * skeletonZhang_pass[n], n=1,2
################################################################################

[kernel-buffer1D]
erode = erode_c4_local_unroll
dilate = dilate_c4_local_unroll
gradient = gradient_c4_local_unroll
subtract = subtract4
hitmiss = local

################################################################################
# implementacja z uzyciem buforow 1D (ogolnego przeznaczenia) ponizsze wersje kerneli:
# * erode,  - podstawowa wersja, wszystko odczytywane z pamieci globalnej
#	erode_local, - uzycie pamieci lokalnej
#	erode_c4_local, - uzycie pamieci lokalnej + int4 jako wspol. el. sktrukturalnego
#	erode_c4_local_unroll, -prosty unrolling
#	erode_c4_local_pragma, - unroll statyczny (wielkosc wektora wspolrzednych el. struk. podawana jest statycznie podczas kompilacji)
#	---------------------------------------------------------------
#	To samo co wyzej, z tym ze odczytywany jest wektor uchar4 (maks. promien el. strukturalnego wynosi 16)
#	erode4_local
#	erode4_c4_local
#	erode4_c4_local_unroll 
#	erode4_c4_local_pragma
#
# * dilate, - to co w przypadku erozji
#	dilate_local, 
#	dilate_c4_local, 
#	dilate_c4_local_unroll
#	dilate_c4_local_pragma
#	dilate4_local, 
#	dilate4_c4_local,
#	dilate4_c4_local_unroll
#	dilate4_c4_local_pragma
#
# * gradient, - to co w przypadku erozji
#	gradient_local, 
#	gradient_c4_local, 
#	gradient_c4_local_unroll
#	gradient_c4_local_pragma
#	gradient4_local, 
#	gradient4_c4_local,
#	gradient4_c4_local_unroll
#	gradient4_c4_local_pragma
#
# * subtract, - podst. wersja
#	subtract4 - odczyt i zapis po 4 wartosci
#
# Operacje hit-miss
# * dla opcji hitmiss=local uzyte zostana kernele outline4_local, skeleton4_iter[n]_local oraz skeletonZhang4_pass[n]_local
# * dla opcji htimiss=global uzyte zostane kernele outline, skeleton_iter[n] oraz skeletonZhang_pass[n]
################################################################################