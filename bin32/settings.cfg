[gui]
maximagewidth = 768
maximageheight = 768
defaultimage = lena.jpg

[opencl]

# Rozmiar grupy roboczej (lokalnej) (tylko dla metody z wykorzystaniem buforow)
# Dla metody z wykorzystaniem tekstur, wybor rozmiaru grupy roboczej jest pozostawiony srodowisku wykonawaczemu
workgroupsizex = 16
workgroupsizey = 16

# 0 - uchar
# 1 - uint
# (tylko dla metody z wykorzystaniem buforow)
datatype = 0

[kernel]
local = 1
erode = erode_local
dilate = dilate_local
outline = outline
subtract = subtract

################################################################################
# dla method = 0 (images2d_t) mamy dostepne kernele:
# * erode, - najprostrza metoda
#	erode_c4, - pobiera wspolrzedne el. strukturalnego jako int4 zamiast int2 (lepsze upakowanie operacji ALU) po czym w jednym kroku petli wykonuje dwie operacje min lub max
#	erode_c4_unroll - to co wyzej + wielkosc wektora wspolrzednych el. strukturalnego jest podawana w czasie kompilacji jako -DCOORDS_SIZE=N.
#					Dzieki temu mozna zastosowac pragme unroll
#
# * dilate, - to co w przypadku erozji
#	dilate_c4, 
#   dilate_c4_unroll
#
# * outline (hit-miss wyciagajacy kontury obiektow)
# * subtract: operacja typu dst=saturate(a-b)
# * skeleton_iter[n], n=1, .., 8 (dla kazdego z 8 elementow strukturalnych)
#
# ------------------------------------------------------------------------------
#
# dla method = 1 (__global uchar* ew uint*) mamy dostepne kernele:
# * erode,  - podstawowa wersja, wszystko odczytywane z pamieci globalnej
#	erode_local, - uzycie pamieci lokalnej
#	erode_c4_local, - uzycie pamieci lokalnej + int4 jako wspol. el. sktrukturalnego
#	erode_c4_local_unroll, -prosty unrolling
#	erode_c4_local_pragma, - unroll statyczny (wielkosc wektora wspolrzednych el. struk. podawana jest statycznie podczas kompilacji)
#	---------------------------------------------------------------
#	To samo co wyzej, z tym ze odczytywany jest wektor uchar4 (maks. promien el. strukturalnego wynosi 16)
#	erode4_local
#	erode4_c4_local
#	erode4_c4_local_unroll 
#	erode4_c4_local_pragma
#
# * dilate, - to co w przypadku erozji
#	dilate_local, 
#	dilate_c4_local, 
#	dilate_c4_local_unroll
#	dilate_c4_local_pragma
#	dilate4_local, 
#	dilate4_c4_local,
#	dilate4_c4_local_unroll
#	dilate4_c4_local_pragma
#
# * outline, - podstawowa wersja, wszystko odczytywane z pamieci globalnej
#	outline_local, - uzycie pamieci lokalnej
#	outline4_local - odczyt z globalnej i zapis do pamieci lokalnej po 4 piksele
#	jako ze outline oraz skeleton sa operacjami o stalym el. strukturalnym, niejako bezposrednio maja petle 'unrolled'
#
# * subtract, - podst. wersja
#	subtract4 - odczyt i zapis po 4 wartosci
#
# * skeleton_iter[n], - podst. wersja
#	skeleton4_iter[n]_local, n=1, .., 8 - odczyt z globalnej i zapis do lokalnej po 4 piksele
################################################################################

