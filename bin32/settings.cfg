[opencl]

# Rozmiar grupy roboczej (lokalnej) (tylko dla metody z wykorzystaniem buforow)
workgroupsizex = 16
workgroupsizey = 16

# Tryb czytania danych (tylko dla metody z wykorzystaniem buforow)
# 0 - bez zadnej optymalizacji
# 1 - wiersz danych bedzie wyrownany do rozmiaru grupy roboczej (a wiec i do 4 bajtu)
readingmethod = 1

# 0 - uchar
# 1 - uint
# (tylko dla metody z wykorzystaniem buforow)
datatype = 0

[kernel]
local = 0
erode = erode_c4
dilate = dilate_c4
outline = outline
subtract = subtract

################################################################################
# dla method = 0 (images2d_t) mamy dostepne kernele:
# * erode, - najprostrza metoda
#	erode_c4, - pobiera wspolrzedne el. strukturalnego jako int4 zamiast int2 (lepsze upakowanie operacji ALU) po czym w jednym kroku petli wykonuje dwie operacje min lub max
#	erode_c4_unroll - to co wyzej + wielkosc wektora wspolrzednych el. strukturalnego jest podawana w czasie kompilacji jako -DCOORDS_SIZE=N.
#					Dzieki temu mozna zastosowac pragme unroll
#
# * dilate, - to co w przypadku erozji
#	dilate_c4, 
#   dilate_c4_unroll
#
# * outline (hit-miss wyciagajacy kontury obiektow)
# * subtract: operacja typu dst=saturate(a-b)
# * skeleton_iter[n], n=1, .., 8 (dla kazdego z 8 elemento strukturalnych)
#
# ------------------------------------------------------------------------------
#
# dla method = 1 (__global uchar* ew uint*) mamy dostepne kernele:
# * erode,  - podstawowa wersja, wszystko odczytywane z pamieci globalnej
#	erode_c4, - pobiera wspolrzedne el. strukturalnego jako int4 zamiast int2 (czyli w jednym przebiegu petli wykona dwie operacje min badz max)
#	erode_local, - uzycie pamieci lokalnej
#	erode_c4_local, - uzycie pamieci lokalnej + int4 jako wspol. el. sktrukturalnego
#	erode4_local, - zapis pikseli po 4 (uchar4 ew. uint4) do pamieci lokalnej
#	erode4_c4_local, - zapis pikseli po 4 do pamieci lokalnej wraz ze wspol. el. strukturlanego w postaci int4
#	erode4_c4_local_unroll - to co wyzej + wielkosc wektora wspolrzednych el. struk. podawana jest statycznie podczas kompilacji
#
# * dilate, - to co w przypadku erozji
#	dilate_c4, 
#	dilate_local, 
#	dilate_c4_local, 
#	dilate4_local, 
#	dilate4_c4_local, 
#	dilate4_c4_local_unroll
#
# * outline, - podstawowa wersja, wszystko odczytywane z pamieci globalnej
#	thinning_local, - uzycie pamieci lokalnej
#	thinning4_local - odczyt z globalnej i zapis do pamieci lokalnej po 4 piksele
#	jako ze outline oraz skeleton sa operacjami o stalym el. strukturalnym, niejako bezposrednio maja petle 'unrolled'
#
# * subtract, - podst. wersja
#	subtract4 - odczyt i zapis po 4 wartosci
#
# * skeleton_iter[n], - podst. wersja
#	skeleton4_iter[n]_local, n=1, .., 8 - odczyt z globalnej i zapis do lokalnej po 4 piksele
################################################################################

